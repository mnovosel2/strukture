#define max 999;
typedef int element;
struct klijent{
               char ime_prez[35];
               int datum[3];
               float tekuci;
               float devizni;
               
               int a,b,c,d;    
};
struct q{
         klijent vrijednost[1000];
         element front, rear; 
};
typedef struct q red;
element AddOne(int x){
        return ((x+1)%1000);
} 
red *InitQ(red *Q){
             Q=new red;
             Q->front=0;
             Q->rear=max;
             return Q;
}
element isEmptyQ(red *Q){
        if(AddOne(Q->rear)==Q->front)
                                     return 1;
        else
            return 0;
}
klijent FrontQ(red *Q){
                   if(isEmptyQ(Q))
                              std::cout<<"Red je prazan "<<std::endl;          
                  else 
                   return Q->vrijednost[Q->front];
}
void EnQueueQ(klijent x, red *Q){
     if(AddOne(AddOne(Q->rear))==Q->front)
                                          std::cout<<"Red je pun, unos nije moguc "<<std::endl;
     else{
          Q->rear=AddOne(Q->rear);
          Q->vrijednost[Q->rear]=x;
          }
}
void DeQueueQ(red *Q){
      if(isEmptyQ(Q)){
                              std::cout<<"Red je prazan "<<std::endl;          
                              return;
                              }
     Q->front=AddOne(Q->front);
}
